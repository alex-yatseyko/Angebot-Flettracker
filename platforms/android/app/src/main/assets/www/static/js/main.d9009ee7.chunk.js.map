{"version":3,"sources":["assets/logo.png","components/BottomNavigation.js","screens/AuthScreen.js","screens/Map.js","components/Button.js","screens/Settings.js","screens/List.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BottomNavigation","react_default","a","createElement","className","react_router_dom","to","index_es","icon","faGlobe","faList","faCog","AuthScreen","Map","type","placeholder","es_Map","center","zoom","TileLayer","attribution","url","Button","_ref","text","path","exact","Settings","src","logo","alt","Button_Button","List","_useState","useState","name","capt","places","key","_useState2","Object","slicedToArray","ships","map","ship","useRoutes","isAuthenticated","react_router","Map_Map","List_List","Settings_Settings","AuthScreen_AuthScreen","App","routes","BottomNavigation_BottomNavigation","Boolean","window","location","hostname","match","renderReactDom","ReactDOM","render","src_App","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d9009ee7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b16df6da.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faList } from '@fortawesome/free-solid-svg-icons'\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'\n\nexport const BottomNavigation = () => {\n    return (\n        <div className=\"nav\">\n            <Link to=\"/map\">\n                <FontAwesomeIcon className=\"nav-icon\" icon={faGlobe} />\n            </Link>\n            <Link to=\"/list\">\n                <FontAwesomeIcon className=\"nav-icon\" icon={faList} />\n            </Link>\n            <Link to=\"/settings\">\n                <FontAwesomeIcon className=\"nav-icon\" icon={faCog} />\n            </Link>\n          </div>\n    )\n}\n","import React from 'react'\n\nexport const AuthScreen = () => {\n    return (\n        <div>\n            AuthScreen\n        </div>\n    )\n}\n","import React from 'react'\nimport { Map as MainMap, TileLayer, Marker, Popup } from 'react-leaflet';\n\nexport const Map = () => {\n    const center = [22.286394, 114.149139]\n    const zoom = 16;\n\n    return (\n        <div>\n        <header>\n            <input type=\"text\" className=\"headerInput\" placeholder=\"Search Vessel or Ship Group...\"/>\n          </header>\n          <MainMap\n            center={center}\n            zoom={zoom}\n          >  \n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </MainMap>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Button = ({ text, path }) => {\n    return (\n        <Link path={path} exact className=\"btn\">\n            <div className=\"btn-primary\">\n                { text }\n            </div>\n        </Link>\n    )\n}\n","import React from 'react'\nimport { Button } from '../components/Button'\n\nimport logo from '../assets/logo.png';\n\nexport const Settings = () => {\n    return (\n        <div className=\"content\">\n            <img src={ logo } alt=\"logo\"/>\n            <Button text=\"Logout\" path=\"#\"/>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\n\nexport const List = () => {\n    const [ships, setShips] = useState([\n        {name: 'MV OCTOPUS', capt: 'A.Kirk', places: [], key: '1'},\n        {name: 'MV TURTOISE', capt: 'J.Doe', places: [], key: '2'},\n        {name: 'MV STARFISH', capt: 'A.Ace', places: [], key: '3'},\n        {name: 'MV WALRUS', capt: 'A.Sonething', places: [], key: '4'},\n        {name: 'MV SEAGULL', capt: 'A.Whatever', places: [], key: '5'},\n        {name: 'MV PELICAN', capt: 'A.Yatseyko', places: [], key: '6'},\n        {name: 'MV OCTOPUS', capt: 'A.Kirk', places: [], key: '7'},\n        {name: 'MV TURTOISE', capt: 'J.Doe', places: [], key: '8'},\n        {name: 'MV STARFISH', capt: 'A.Ace', places: [], key: '9'},\n        {name: 'MV WALRUS', capt: 'A.Sonething', places: [], key: '10'},\n        {name: 'MV SEAGULL', capt: 'A.Whatever', places: [], key: '11'},\n        {name: 'MV PELICAN', capt: 'A.Yatseyko', places: [], key: '12'}\n      ])\n\n    return (\n        <div>\n            <header>\n                <input type=\"text\" className=\"headerInput\" placeholder=\"Search Vessel or Ship Group...\"/>\n            </header>\n            { ships.map((ship) => {\n          return (\n            <div className=\"ship\" key={ ship.key }>\n              <div> \n                <p>{ship.name}</p>\n                <p>Capt. {ship.capt}</p>\n              </div>\n              <div> \n                <p>{ship.name}</p>\n                <p>Capt. {ship.capt}</p>\n              </div>\n            </div>\n          )\n        }) }\n        </div>\n    )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport { AuthScreen } from './screens/AuthScreen'\nimport { Map } from './screens/Map'\nimport { Settings } from './screens/Settings'\nimport { List } from './screens/List'\n\nexport const useRoutes = isAuthenticated => {\n    if(isAuthenticated) {\n        return (\n            <Switch>\n                <Route path=\"/map\" exact>\n                    <Map />\n                </Route>\n                <Route path=\"/list\" exact>\n                    <List />\n                </Route>\n                <Route path=\"/settings\" exact>\n                    <Settings />\n                </Route>\n                <Route path=\"/some\" exact>\n                    <Settings />\n                </Route>\n            </Switch>\n        )\n    }\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <AuthScreen />\n            </Route>\n        </Switch>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { BottomNavigation } from './components/BottomNavigation'\n\nimport './App.css';\n\nimport { useRoutes } from './routes'\n\nfunction App() {\n  const center = [22.286394, 114.149139]\n  const zoom = 16;\n\n  const isAuthenticated = true;\n  const routes = useRoutes(isAuthenticated)\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        { isAuthenticated ? routes : '' }\n          {/* { routes } */}\n        <BottomNavigation />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n};\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}